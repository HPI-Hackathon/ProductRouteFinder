<style type="text/css">
html, body, #map-canvas {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}

body {
  padding-top: 50px;
}

.container-fluid, .row, .col-md-8 {
  height: 100%;
}

.media-left {
  min-width: 145px;
  text-align: center;
}

.media-left img {
  margin-left: auto;
  margin-right: auto;
}
</style>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js"></script>
<script type="text/javascript">
// google maps object
var map;

// things needed to find / display routes
var directionsService = new google.maps.DirectionsService();
var directionsDisplay;
// array of route map overlay objects, stored to be able to remove them from the map again
var mapRoutePoints = [];

// info window of ad markers
var infoWindow = new google.maps.InfoWindow();
// array of ad map marker objects, also stored to be able to remove them from the map again
var mapMarkers = [];

// current route as array of points where to search for ads
var currentRoute = [];

var currentAdIDs = [];

// index of current search, incremented every time something is searched
// we use this to stop the current loading along a route if something new is searched
var currentSearch = 42;

function clearOldRoute() {
  for (var i = 0; i < mapRoutePoints.length; i++)
    mapRoutePoints[i].setMap(null);
  mapRoutePoints = [];
  // dirty hack to remove directions from map
  directionsDisplay.setMap(null);
  directionsDisplay = new google.maps.DirectionsRenderer();
  directionsDisplay.setMap(map);
}

function clearOldMarkers() {
  for (var i = 0; i < mapMarkers.length; i++)
    mapMarkers[i].setMap(null);
  mapMarkers = [];
  currentAdIDs = [];
  $("#results").empty();
}

function bindInfoWindow(marker, markerIndex, infoWindow, content) {
  google.maps.event.addListener(marker, "click", function() {
    infoWindow.setContent(content);
    infoWindow.open(map, marker);

    // TODO maybe scroll to element right when click marker...
    document.getElementById("ad-" + markerIndex).scrollIntoView(true);
    /*
    console.log("scroll to " + markerIndex);
    var offset = $("#ad-" + markerIndex).offset();
    console.log(offset);
    console.log($("#sidebar").offset());
    //$("#sidebar").animate({ scrollTop: offset.top - $("#sidebar").offset().top }, 1000);
    $("#sidebar").scrollTop(offset.top - $("#sidebar").offset().top);
    */
  });
}

function displayAds(ads, center, radius) {
  //ads.sort(function(ad_a, ad_b) { return ad_a.price - ad_b.price; })
  ads.forEach(function(ad) {
    var latLng = new google.maps.LatLng(ad.latLng[0], ad.latLng[1]);
    // make sure that ad is really contained in that circle, sometimes it's a bit off
    var distance = google.maps.geometry.spherical.computeDistanceBetween(latLng, center);
    if (distance > radius)
      return;
    
    // also make sure that ad is only displayed once
    // ad is already displayed
    if (currentAdIDs.indexOf(ad.id) != -1)
      return;
    currentAdIDs.push(ad.id);

    var markerIndex = mapMarkers.length;    
    var marker = new google.maps.Marker({
      position: latLng,
      map: map,
      title: ad.title
    });
    mapMarkers.push(marker);

    var info = "<a href='" + ad.url + "'><h3>" + ad.title + "</h3></a>";
    if (ad.price != -1) {
      info += "<h5>" + ad.price + "€</h5>";
    }
    if (ad.image != "") {
      var image = new Image();
      image.src = ad.image;
      info += "<p><center><img src='" + ad.image + "' /></center></p>";
    }
    info += "<p>" + ad.description + "</p>";
    bindInfoWindow(marker, markerIndex, infoWindow, info);

    /*
    <div class="media">
      <div class="media-left media-middle">
        <a href="#">
          <img class="media-object" src="..." alt="...">
        </a>
      </div>
      <div class="media-body">
        <h4 class="media-heading">Middle aligned media</h4>
      </div>
    </div>
    */

    var result = $('<div class="media"><div class="media-left media-top"><img class="media-object" src=""></div><div class="media-body"><h4 class="media-heading">Middle aligned media</h4><span></span></div></div>');
    result.attr("id", "ad-" + markerIndex);
    result.find("img").attr("src", ad.imageThumbnail);
    result.find("h4").html(ad.title);
    if (ad.price != -1)
      result.find("span").html(ad.price + "€");
    result.data("marker-index", markerIndex);
    result.click(function() {
      var marker = mapMarkers[$(this).data("marker-index")];
      map.panTo(marker.getPosition());
      map.setZoom(13);
      new google.maps.event.trigger(marker, "click");
    });
    $("#results").append(result);
  });
}

function calcRoute(start, end, radius, transport, pointsCallback) {
  // dirty hack
  if (end == "")
    end = start;

  var travelMode = google.maps.TravelMode.DRIVING;
  if (transport == "bicycling") travelMode = google.maps.TravelMode.BICYCLING;
  else if (transport == "transit") travelMode = google.maps.TravelMode.TRANSIT;
  else if (transport == "walking") travelMode = google.maps.TravelMode.WALKING;

  var request = {
    origin: start,
    destination: end,
    travelMode: travelMode,
  };
  directionsService.route(request, function(response, status) {
    if (status != google.maps.DirectionsStatus.OK) {
      alert("Unable to find a route.");
      pointsCallback([]);
    } else {
      // route auf der map setzen falls vorhanden
      if (start != end)
        directionsDisplay.setDirections(response);

      var points = response.routes[0].overview_path;
      var pointsSearch = [];

      var lastPoint = null;
      for (var i = 0; i < points.length; i++) {
        var point = points[i];

        if (lastPoint != null) {
          var distance = google.maps.geometry.spherical.computeDistanceBetween(point, lastPoint);
          if (distance < 1.5 * radius) {
            continue;
          }
        }
        lastPoint = point;

        var circleOptions = {
          strokeColor: '#FF0000',
          strokeOpacity: 0.8,
          strokeWeight: 2,
          fillColor: '#FF0000',
          fillOpacity: 0.1,
          map: map,
          center: point,
          radius: radius,
        };
        // Add the circle for every point on the map
        pointCircle = new google.maps.Circle(circleOptions);
        mapRoutePoints.push(pointCircle);
        // ansonsten wenn es nur einen punkt gibt einfach den circle anzeigen
        map.fitBounds(pointCircle.getBounds());
        //console.log(point);
        pointsSearch.push({
          "lat": point.lat(),
          "lng": point.lng(),
          "radius": radius,
        });
      }

      pointsCallback(pointsSearch); //used for giving points to kleinanzeigen API
    }
  });
}

function initialize() {
  directionsDisplay = new google.maps.DirectionsRenderer();
  var chicago = new google.maps.LatLng(52.4927028, 13.4519156);
  var mapOptions = {
    zoom: 11,
    center: chicago
  };
  map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
  directionsDisplay.setMap(map);

  $(".button-route").click(function() {
    $("#input-from").val($(this).data("from"));
    $("#input-to").val($(this).data("to"));
    $("#input-radius").val($(this).data("radius"));
    $("#input-transport").val($(this).data("transport"));
    $("#submit-route").click();
    //return false;
  });

  $("#submit-route").click(function() {
    clearOldRoute();
    calcRoute($("#input-from").val(), $("#input-to").val(), parseInt($("#input-radius").val()) * 1000,
      $("#input-transport").val(), function(points) {
        currentRoute = points;
        // array of points might be empty if no route was found
        // update search if a route was found, clear markers if not
        if (currentRoute != [])
          $("#submit-search").click();
        else
          clearOldMarkers();
    });
    return false;
  });

  $("#submit-search").click(function() {
    clearOldMarkers();

    var i = 0;
    var requestData = {
      "query" : $("#input-query").val(),
      "lat" : currentRoute[0].lat,
      "lng" : currentRoute[0].lng,
      "radius" : currentRoute[0].radius / 1000,
    }

    // increment search index, save own search index
    currentSearch++;
    var search = currentSearch;
    var handler = function(data, jwres) {
      // if a new search was started in the meanwhile
      // ignore the received ads and also don't load ads in the other circles
      if (search != currentSearch)
        return;
      
      if (jwres.statusCode !== 200) {
        alert("WTF?!");
      } else {
        var center = new google.maps.LatLng(currentRoute[i].lat, currentRoute[i].lng);
        var radius = currentRoute[i].radius;
        displayAds(data.ads, center, radius);

        i++;
        if (i < currentRoute.length) {          
          requestData.lat = currentRoute[i].lat;
          requestData.lng = currentRoute[i].lng;
          requestData.radius = currentRoute[i].radius / 1000;
          io.socket.post("/ebay/ads", requestData, handler);
        }
      }
    };

    io.socket.post("/ebay/ads/", requestData, handler);
    return false;
  });

  $(".button-route").first().click();
}

google.maps.event.addDomListener(window, 'load', initialize);
</script>

<nav class="navbar navbar-inverse navbar-fixed-top">
  <div class="container">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="#"><img height=35 src="/images/logo-ebayk-402x802.png" alt=""></a>
    </div>
    <div id="navbar" class="collapse navbar-collapse">
      <!--<ul class="nav navbar-nav">
        <li class="active"><a href="#">Home</a></li>
        <li><a href="#about">About</a></li>
        <li><a href="#contact">Contact</a></li>
      </ul>-->
      <ul class="nav navbar-nav">
        <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">My Places<span class="caret"></span></a>
          <ul class="dropdown-menu" role="menu">
            <li><a class="button-route" href="#" data-from="Berlin" data-to="Berlin" data-radius="15" data-transport="driving">Berlin</a></li>
            <li><a class="button-route" href="#" data-from="Potsdam" data-to="Potsdam" data-radius="10" data-transport="driving">Potsdam</a></li>
            <li><a class="button-route" href="#" data-from="Berlin" data-to="Potsdam" data-radius="5" data-transport="driving">Berlin - Potsdam</a></li>
            <li><a class="button-route" href="#" data-from="Neubrandenburg" data-to="Berlin" data-radius="20" data-transport="driving">Neubrandenburg - Berlin</a></li>
            <li><a class="button-route" href="#" data-from="Bonn" data-to="Berlin" data-radius="30" data-transport="driving">Bonn - Berlin</a></li>
          </ul>
        </li>
      </ul>
      <form id="form-route" class="navbar-form navbar-left" role="search" action="#">
        <div class="form-group">
          <input id="input-from" type="text" class="form-control" placeholder="Start">
          <input id="input-to" type="text" class="form-control" placeholder="Ziel">
          <div class="input-group">
            <input id="input-radius" type="text" class="form-control" style= "width:50px" placeholder="Umkreis" value="5">
            <div class="input-group-addon">km</div>
          </div>
          <select id="input-transport" class="form-control">
            <option value="driving">Auto</option>
            <option value="bicycling">Fahrrad</option>
            <option value="transit">ÖPNV</option>
            <option value="walking">Laufen</option>
          </select>
        </div>
        <button id="submit-route" type="submit" class="btn btn-default">Set</button>
      </form>
    </div><!--/.nav-collapse -->
  </div>
</nav>

<div class="container-fluid">
  <div class="row">
    <div class="col-md-8" style="padding-left: 0">
      <div id="map-canvas"></div>
      <div id="directions"></div>
    </div>
    <div id="sidebar" class="col-md-4" style="height: 100%; overflow-y: scroll; padding-bottom: 10px">
      <h3>Suche</h3>
      <form id="form-search" action="#">
        <div class="form-group">
          <input id="input-query" type="text" class="form-control" placeholder="Suchbegriff" />
          <!--<select class="form-control">
            <option>Kategorie</option>
          </select>-->
          <button id="submit-search" type="submit" class="btn btn-default">Suchen</button>
        </div>
      </form>
      <h3>Ergebnisse</h3>
      <div id="results">
      </div>
    </div>
  </div>
</div><!-- /.container -->
