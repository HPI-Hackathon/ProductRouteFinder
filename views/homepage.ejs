<style type="text/css">
html, body, #map-canvas {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}

body {
  padding-top: 50px;
}

.container-fluid, .row, .col-md-8 {
  height: 100%;
}

.media-left {
  min-width: 145px;
  text-align: center;
}

.media-left img {
  margin-left: auto;
  margin-right: auto;
}
</style>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBlM4TmmBINwcow1cQtcO359u8jX3qTFSo"></script>
<script type="text/javascript">
var directionsDisplay;
var directionsService = new google.maps.DirectionsService();
var oldRoute = [], oldMarkers = [];
var currentPoints = [];
var map;

function clearOldRoute() {
  for (var i = 0; i < oldRoute.length; i++)
    oldRoute[i].setMap(null);
  oldRoute = [];
  // dirty hack
  directionsDisplay.setMap(null);
  directionsDisplay = new google.maps.DirectionsRenderer();
  directionsDisplay.setMap(map);
}

function clearOldMarkers() {
  for (var i = 0; i < oldMarkers.length; i++)
    oldMarkers[i].setMap(null);
  oldMarkers = [];
  $("#results").empty();
}

function bindInfoWindow(marker, markerIndex, infowindow, content) {
  google.maps.event.addListener(marker, "click", function() {
    infowindow.setContent(content);
    infowindow.open(map, marker);
    
    // TODO maybe scroll to element right when click marker...
    document.getElementById("ad-" + markerIndex).scrollIntoView(true);
    /*
    console.log("scroll to " + markerIndex);
    var offset = $("#ad-" + markerIndex).offset();
    console.log(offset);
    console.log($("#sidebar").offset());
    //$("#sidebar").animate({ scrollTop: offset.top - $("#sidebar").offset().top }, 1000);
    $("#sidebar").scrollTop(offset.top - $("#sidebar").offset().top);
    */
  });
}

function initialize() {
  directionsDisplay = new google.maps.DirectionsRenderer();
  var chicago = new google.maps.LatLng(52.4927028, 13.4519156);
  var mapOptions = {
    zoom: 11,
    center: chicago
  };
  map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
  directionsDisplay.setMap(map);
  
  $(".button-route").click(function() {
    $("#input-from").val($(this).data("from"));
    $("#input-to").val($(this).data("to"));
    $("#input-radius").val($(this).data("radius"));
    $("#input-transport").val($(this).data("transport"));
    $("#submit-route").click();
    //return false;
  });
  
  $("#submit-route").click(function() {
    clearOldRoute();
    calcRoute($("#input-from").val(), $("#input-to").val(), parseInt($("#input-radius").val()) * 1000,
      $("#input-transport").val(), function(points) {
        currentPoints = points;
        // suche updaten wenn route/position verändert wurde
        $("#submit-search").click();
    });
    return false;
  });
  
  $("#submit-search").click(function() {
    clearOldMarkers();
    var radius = parseInt($("#input-radius").val()) * 1000;
    
    console.log(currentPoints);
    var data = {
      "query" : $("#input-query").val(),
      "points" : currentPoints,
    }
    io.socket.post("/ebay/ads/", data, function(data, jwres) {
      if (jwres.statusCode !== 200) {
        alert("WTF?!");
        return;
      }
      
      var infowindow = new google.maps.InfoWindow({
        content: "Nothing"
      });
      
      //console.log(points)
      //Add bids to Map
      for (var i in data.markers) {
        var marker = data.markers[i];
        var latLng = new google.maps.LatLng(marker.latLng[0], marker.latLng[1]);
        for (var point in currentPoints) {
          var googlePoint = new google.maps.LatLng(currentPoints[point].lat, currentPoints[point].lng)
          var distance = google.maps.geometry.spherical.computeDistanceBetween(latLng, googlePoint);
          if (distance - currentPoints[point].radius < 0) {
            var gMarker = new google.maps.Marker({
              position: latLng,
              map: map,
              title: marker.title
            });
            var markerIndex = oldMarkers.length;
            oldMarkers.push(gMarker);
            var info = "<a href='" + marker.url + "'><h3>" + marker.title + "</h3></a>";
            if (marker.price != -1) {
              info += "<h5>" + marker.price + "€</h5>";
            }
            if (marker.image != "") {
              var image = new Image();
              image.src = marker.image;
              info += "<p><center><img src='" + marker.image + "' /></center></p>";
            }
            info += "<p>" + marker.description + "</p>";
            bindInfoWindow(gMarker, markerIndex, infowindow, info);
            
            /*
            <div class="media">
              <div class="media-left media-middle">
                <a href="#">
                  <img class="media-object" src="..." alt="...">
                </a>
              </div>
              <div class="media-body">
                <h4 class="media-heading">Middle aligned media</h4>
              </div>
            </div>
            */
            
            var media = $('<div class="media"><div class="media-left media-top"><img class="media-object" src=""></div><div class="media-body"><h4 class="media-heading">Middle aligned media</h4><span></span></div></div>');
            media.attr("id", "ad-" + markerIndex);
            media.find("img").attr("src", marker.imageThumbnail);
            media.find("h4").html(marker.title);
            if (marker.price != -1)
              media.find("span").html(marker.price + "€");
              
            media.data("marker-index", markerIndex);
            
            media.click(function() {
              var marker = oldMarkers[$(this).data("marker-index")];
              console.log("pan to " + $(this).data("marker-index"));
              map.panTo(marker.getPosition());
              map.setZoom(13);
              new google.maps.event.trigger(marker, "click");
            });
            $("#results").append(media);
            break;
          }
        }
      }
      console.log(data);
      //alert(data);
    });
    return false;
  });
  
  $(".button-route").first().click();
}

function calcRoute(start, end, radius, transport, pointsCallback) {  
  // dirty hack
  if (end == "")
    end = start;
  
  var travelMode = google.maps.TravelMode.DRIVING;
  if (transport == "bicycling") travelMode = google.maps.TravelMode.BICYCLING;
  else if (transport == "transit") travelMode = google.maps.TravelMode.TRANSIT;
  else if (transport == "walking") travelMode = google.maps.TravelMode.WALKING;
  
  var request = {
    origin: start,
    destination: end,
    travelMode: travelMode,
  };
  directionsService.route(request, function(response, status) {
    if (status == google.maps.DirectionsStatus.OK) {
      // route auf der map setzen falls vorhanden
      if (start != end)
        directionsDisplay.setDirections(response);
      
      var points = response.routes[0].overview_path;
      var pointsSearch = [];
      
      var lastPoint = null;
      for (var i = 0; i < points.length; i++) {
        var point = points[i];
                
        if (lastPoint != null) {
          var distance = google.maps.geometry.spherical.computeDistanceBetween(point, lastPoint);
          if (distance < 1.5 * radius) {
            continue;
          }
        }
        lastPoint = point;
        
        var circleOptions = {
          strokeColor: '#FF0000',
          strokeOpacity: 0.8,
          strokeWeight: 2,
          fillColor: '#FF0000',
          fillOpacity: 0.1,
          map: map,
          center: point,
          radius: radius,
        };
        // Add the circle for every point on the map
        pointCircle = new google.maps.Circle(circleOptions);
        oldRoute.push(pointCircle);
        // ansonsten wenn es nur einen punkt gibt einfach den circle anzeigen
        map.fitBounds(pointCircle.getBounds());
        //console.log(point);
        pointsSearch.push({
          "lat": point.lat(),
          "lng": point.lng(),
          "radius": radius,
        });
      }
      
      pointsCallback(pointsSearch); //used for giving points to kleinanzeigen API
    }
  });
}

google.maps.event.addDomListener(window, 'load', initialize);
</script>

<nav class="navbar navbar-inverse navbar-fixed-top">
  <div class="container">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button> 
      <a class="navbar-brand" href="#"><img height=35 src="/images/logo-ebayk-402x802.png" alt=""></a>
    </div>
    <div id="navbar" class="collapse navbar-collapse">
      <!--<ul class="nav navbar-nav">
        <li class="active"><a href="#">Home</a></li>
        <li><a href="#about">About</a></li>
        <li><a href="#contact">Contact</a></li>
      </ul>-->
      <ul class="nav navbar-nav">
        <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">My Places<span class="caret"></span></a>
          <ul class="dropdown-menu" role="menu">            
            <li><a class="button-route" href="#" data-from="Berlin" data-to="Berlin" data-radius="15" data-transport="driving">Berlin</a></li>
            <li><a class="button-route" href="#" data-from="Potsdam" data-to="Potsdam" data-radius="10" data-transport="driving">Potsdam</a></li>
            <li><a class="button-route" href="#" data-from="Berlin" data-to="Potsdam" data-radius="5" data-transport="driving">Berlin - Potsdam</a></li>
            <li><a class="button-route" href="#" data-from="Neubrandenburg" data-to="Berlin" data-radius="20" data-transport="driving">Neubrandenburg - Berlin</a></li>
            <li><a class="button-route" href="#" data-from="Bonn" data-to="Berlin" data-radius="30" data-transport="driving">Bonn - Berlin</a></li>
          </ul>
        </li>
      </ul>
      <form id="form-route" class="navbar-form navbar-left" role="search" action="#">
        <div class="form-group">
          <input id="input-from" type="text" class="form-control" placeholder="Start">
          <input id="input-to" type="text" class="form-control" placeholder="Ziel">
          <div class="input-group">
            <input id="input-radius" type="text" class="form-control" style= "width:50px" placeholder="Umkreis" value="5">
            <div class="input-group-addon">km</div>
          </div>
          <select id="input-transport" class="form-control">
            <option value="driving">Auto</option>
            <option value="bicycling">Fahrrad</option>
            <option value="transit">ÖPNV</option>
            <option value="walking">Laufen</option>
          </select>
        </div>
        <button id="submit-route" type="submit" class="btn btn-default">Set</button>
      </form>
    </div><!--/.nav-collapse -->
  </div>
</nav>

<div class="container-fluid">
  <div class="row">
    <div class="col-md-8" style="padding-left: 0">
      <div id="map-canvas"></div>
      <div id="directions"></div>
    </div>
    <div id="sidebar" class="col-md-4" style="height: 100%; overflow-y: scroll; padding-bottom: 10px">
      <h3>Suche</h3>
      <form id="form-search" action="#">
        <div class="form-group">
          <input id="input-query" type="text" class="form-control" placeholder="Suchbegriff" />
          <select class="form-control">
            <option>Kategorie</option>
          </select>
          <button id="submit-search" type="submit" class="btn btn-default">Suchen</button>
        </div>
      </form>
      <h3>Ergebnisse</h3>
      <div id="results">
      </div>
    </div>
  </div>
</div><!-- /.container -->
